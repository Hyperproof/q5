import { ArgType, Command, IExecuteInput } from '@5qtrs/cli';
import { ExecuteService, ProfileService } from '../services';
import { EOL } from 'os';

export class InitCommand extends Command {
  public static async create() {
    return new InitCommand();
  }

  private constructor() {
    super({
      name: 'CLI Initialize',
      cmd: 'init',
      summary: 'Initialize the CLI',
      description: 'Initializes use of the CLI using a CLI init token generated by an account admin.',
      arguments: [
        {
          name: 'token',
          description: 'The user or client CLI init token generated by an account admin.',
        },
      ],
      options: [
        {
          name: 'profile',
          description: 'The name of the profile to create with the initalization of the CLI',
        },
      ],
    });
  }

  protected async onExecute(input: IExecuteInput): Promise<number> {
    await input.io.writeLine();

    // const profile = input.options.profile as string;

    // const executeService = await ExecuteService.create(input);
    // const profileService = await ProfileService.create(input);

    // await profileService.addProfile(profile);

    // const execute = await profileService.getExecutionProfile();
    // console.log(execute);

    return 0;
  }
}
